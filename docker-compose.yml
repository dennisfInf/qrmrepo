x-aws-vpc: ${AWS_VPC}
x-aws-cluster: ${AWS_ECS_CLUSTER}
x-aws-loadbalancer: ${AWS_ELB}

services:
  backenddb:
    image: public.ecr.aws/ubuntu/postgres:12-20.04_beta
  #  image: postgres
    environment:
      POSTGRES_PASSWORD: '${DB_SECRET}'
      POSTGRES_USER: '{$DB_USER}'
      POSTGRES_DB: 'userdb'
    volumes:
      - data:/var/lib/postgresql/data
    networks:  
      - dbnet

  dbprepare:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:relay${IMAGE_TAG}
    #build: ./relay
    depends_on:
      - backenddb
    environment:
      SERVERHOST: 'localhost'
      SERVERPORT: '433'
      DBPASSWORD: '${DB_SECRET}'
      DBUSER: '${DB_USER}'
      DBNAME: 'userdb'
      DBPORT: '5432'
      DBHOST: 'backenddb'
    command: setup
    ports: 
        - target: 434
          x-aws-protocol: http
    deploy:
      x-aws-autoscaling:
        min: 2
        max: 10 #required
        cpu: 75  
    networks:
      - dbnet
    
  relay:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:relay${IMAGE_TAG}
#    build: ./relay
    depends_on:
      - dbprepare
    environment:
      SERVERHOST: 'localhost'
      SERVERPORT: '433'
      DBPASSWORD: '${DB_SECRET}'
      DBUSER: '${DB_USER}'
      DBNAME: 'userdb'
      DBPORT: '5432'
      DBHOST: 'backenddb'
    command: serve
    networks:
      - dbnet
      - frontbacknet
    deploy:
      x-aws-autoscaling:
        min: 2
        max: 10 #required
        cpu: 75  
    ports:
      - target: 433
        x-aws-protocol: http
  
  frontend: 
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:frontend${IMAGE_TAG}
 #   build: ./frontend
    environment:
       API_URL: 'relay'
    depends_on:
      - relay
    networks:
      - frontbacknet
    deploy:
      x-aws-autoscaling:
        min: 2
        max: 10 #required
        cpu: 75  
    ports:
      - target: 80
        x-aws-protocol: http


volumes:
  data:

networks:
  frontbacknet:
  dbnet:
